trigger:
  branches:
    include:
      - main

pr:
  branches:
    include:
      - main

variables:
  - group: TerraformSecrets  # Reference stored secrets in ADO

stages:
  - stage: Terraform_Deployment
    displayName: "Terraform Deployment"
    jobs:
      - job: Terraform_Deploy
        displayName: "Deploy Terraform"
        pool:
          vmImage: 'ubuntu-latest'
        steps:
          - checkout: self

          # Install Terraform
          - task: TerraformInstaller@1
            displayName: "Install Terraform"
            inputs:
              terraformVersion: '1.9.2'

          # Azure CLI Login using Service Principal (Fix: Set Subscription)
          - task: AzureCLI@2
            displayName: "Azure Login"
            inputs:
              scriptType: "bash"
              scriptLocation: "inlineScript"
              inlineScript: |
                az login --service-principal -u $(ARM_CLIENT_ID) -p $(ARM_CLIENT_SECRET) --tenant $(ARM_TENANT_ID)
                az account set --subscription $(ARM_SUBSCRIPTION_ID)  # <-- Fix added here
                az account show
                echo "Azure CLI Authentication Successful"

          # Terraform Init with Backend Configuration
          - script: |
              terraform init -backend-config="storage_account_name=tfstatedemonew" \
                            -backend-config="container_name=tfstate" \
                            -backend-config="key=$(TF_STATE_KEY)"
            displayName: "Terraform Init"
            env:
              ARM_CLIENT_ID: "$(ARM_CLIENT_ID)"
              ARM_CLIENT_SECRET: "$(ARM_CLIENT_SECRET)"
              ARM_SUBSCRIPTION_ID: "$(ARM_SUBSCRIPTION_ID)"
              ARM_TENANT_ID: "$(ARM_TENANT_ID)"

          # Terraform Validate
          - script: |
              terraform validate
            displayName: "Terraform Validate"

          # Terraform Plan
          - task: AzureCLI@2
            displayName: "Terraform Plan"
            inputs:
              azureSubscription: "Terraform Deployment Connection"
              scriptType: "bash"
              scriptLocation: "inlineScript"
              inlineScript: |
                terraform plan -out=tfplan -input=false
            env:
              ARM_CLIENT_ID: "$(ARM_CLIENT_ID)"
              ARM_CLIENT_SECRET: "$(ARM_CLIENT_SECRET)"
              ARM_SUBSCRIPTION_ID: "$(ARM_SUBSCRIPTION_ID)"
              ARM_TENANT_ID: "$(ARM_TENANT_ID)"

          # Terraform Apply
          - task: AzureCLI@2
            displayName: "Terraform Apply"
            inputs:
              azureSubscription: "Terraform Deployment Connection"
              scriptType: "bash"
              scriptLocation: "inlineScript"
              inlineScript: |
                terraform apply -auto-approve tfplan
            env:
              ARM_CLIENT_ID: "$(ARM_CLIENT_ID)"
              ARM_CLIENT_SECRET: "$(ARM_CLIENT_SECRET)"
              ARM_SUBSCRIPTION_ID: "$(ARM_SUBSCRIPTION_ID)"
              ARM_TENANT_ID: "$(ARM_TENANT_ID)"
